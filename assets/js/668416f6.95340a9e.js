"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[441],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return m}});var o=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=o.createContext({}),c=function(e){var n=o.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},u=function(e){var n=c(e.components);return o.createElement(l.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},g=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),g=c(t),m=r,d=g["".concat(l,".").concat(m)]||g[m]||p[m]||i;return t?o.createElement(d,a(a({ref:n},u),{},{components:t})):o.createElement(d,a({ref:n},u))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,a=new Array(i);a[0]=g;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,a[1]=s;for(var c=2;c<i;c++)a[c]=t[c];return o.createElement.apply(null,a)}return o.createElement.apply(null,t)}g.displayName="MDXCreateElement"},4886:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return c},toc:function(){return u},default:function(){return g}});var o=t(7462),r=t(3366),i=(t(7294),t(3905)),a=["components"],s={sidebar_position:1},l="Mono Singletons",c={unversionedId:"Utilities/Singleton",id:"Utilities/Singleton",isDocsHomePage:!1,title:"Mono Singletons",description:"Mono Singletons are monobehaviours of which only one can be present at the same time. They can easily be referenced using the INSTANCE property. They are ideal for manager classes such as a Game Manager, Audio Manager, etc...",source:"@site/docs/Utilities/Singleton.md",sourceDirName:"Utilities",slug:"/Utilities/Singleton",permalink:"/docs/Utilities/Singleton",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Data Tables",permalink:"/docs/Saving and Data/DataTables"},next:{title:"Object Pooling",permalink:"/docs/Utilities/ObjectPooling"}},u=[{value:"Creating a Singleton",id:"creating-a-singleton",children:[],level:2},{value:"Making the Singleton persistent across scenes",id:"making-the-singleton-persistent-across-scenes",children:[],level:2}],p={toc:u};function g(e){var n=e.components,t=(0,r.Z)(e,a);return(0,i.kt)("wrapper",(0,o.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"mono-singletons"},"Mono Singletons"),(0,i.kt)("p",null,"Mono Singletons are monobehaviours of which only one can be present at the same time. They can easily be referenced using the INSTANCE property. They are ideal for manager classes such as a Game Manager, Audio Manager, etc...\nWhen there is no instance present in the scene, one will be created when you try to use the singleton. In most cases you don't want to add the script to a GameObject in your scene."),(0,i.kt)("h2",{id:"creating-a-singleton"},"Creating a Singleton"),(0,i.kt)("p",null,"To create a singleton, all you have to do is inherit from Monosingleton."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cs"},'using ExtensionTools.Singleton;\npublic class MyCustomSingleton : MonoSingleton<MyCustomSingleton>\n{\n    public void LogTest()\n    {\n        Debug.Log("I am a singleton");\n    }\n}\n\n')),(0,i.kt)("p",null,"Now we have a singleton and we can easily call the LogTest method from anywhere without having to keep a reference."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cs"},"MyCustomSingleton.INSTANCE.LogTest(); \n")),(0,i.kt)("h2",{id:"making-the-singleton-persistent-across-scenes"},"Making the Singleton persistent across scenes"),(0,i.kt)("p",null,"Sometimes singletons shouldn't be created foreach scene. We might want to have one persistent reference to the same singleton across all scenes.\nFor example an Audio Manager, it doesn't make sense to have one for every scene since audio will be handled the same in every scene."),(0,i.kt)("p",null,"To keep singletons persistent across scenes we just have to set the DontDestroyOnLoad boolean to true in the constructor."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cs"},'using ExtensionTools.Singleton;\npublic class MyCustomSingleton : MonoSingleton<MyCustomSingleton>\n{\n    public MyCustomSingleton() : base(true)\n    {\n    }\n\n    public void LogTest()\n    {\n        Debug.Log("I am a singleton");\n    }\n}\n')))}g.isMDXComponent=!0}}]);