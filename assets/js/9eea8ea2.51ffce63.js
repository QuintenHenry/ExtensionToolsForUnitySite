"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[284],{3905:function(t,e,n){n.d(e,{Zo:function(){return u},kt:function(){return d}});var r=n(7294);function a(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function l(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function o(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?l(Object(n),!0).forEach((function(e){a(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function i(t,e){if(null==t)return{};var n,r,a=function(t,e){if(null==t)return{};var n,r,a={},l=Object.keys(t);for(r=0;r<l.length;r++)n=l[r],e.indexOf(n)>=0||(a[n]=t[n]);return a}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(r=0;r<l.length;r++)n=l[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(a[n]=t[n])}return a}var c=r.createContext({}),s=function(t){var e=r.useContext(c),n=e;return t&&(n="function"==typeof t?t(e):o(o({},e),t)),n},u=function(t){var e=s(t.components);return r.createElement(c.Provider,{value:e},t.children)},m={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},p=r.forwardRef((function(t,e){var n=t.components,a=t.mdxType,l=t.originalType,c=t.parentName,u=i(t,["components","mdxType","originalType","parentName"]),p=s(n),d=a,f=p["".concat(c,".").concat(d)]||p[d]||m[d]||l;return n?r.createElement(f,o(o({ref:e},u),{},{components:n})):r.createElement(f,o({ref:e},u))}));function d(t,e){var n=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var l=n.length,o=new Array(l);o[0]=p;var i={};for(var c in e)hasOwnProperty.call(e,c)&&(i[c]=e[c]);i.originalType=t,i.mdxType="string"==typeof t?t:a,o[1]=i;for(var s=2;s<l;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},3348:function(t,e,n){n.r(e),n.d(e,{frontMatter:function(){return i},contentTitle:function(){return c},metadata:function(){return s},toc:function(){return u},default:function(){return p}});var r=n(7462),a=n(3366),l=(n(7294),n(3905)),o=["components"],i={sidebar_position:1},c="Collections",s={unversionedId:"Collections/Collections",id:"Collections/Collections",isDocsHomePage:!1,title:"Collections",description:"Collections such as lists and arrays have gotten more extensions to improve your workflow as well.",source:"@site/docs/Collections/Collections.md",sourceDirName:"Collections",slug:"/Collections/Collections",permalink:"/docs/Collections/Collections",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Input Mode",permalink:"/docs/Gameplay/InputMode"},next:{title:"Serializable Dictionary and Hashsets",permalink:"/docs/Collections/SerializableDictionaryAndHashsets"}},u=[{value:"Regular Collections",id:"regular-collections",children:[],level:2},{value:"GameObject/Vector/Transform Collections",id:"gameobjectvectortransform-collections",children:[],level:2},{value:"GameObject Collections",id:"gameobject-collections",children:[],level:2}],m={toc:u};function p(t){var e=t.components,n=(0,a.Z)(t,o);return(0,l.kt)("wrapper",(0,r.Z)({},m,n,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"collections"},"Collections"),(0,l.kt)("p",null,"Collections such as lists and arrays have gotten more extensions to improve your workflow as well. "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cs"},'using ExtensionsTools;\n\n...\n\nstring[] array = new string[] { "this", "is", "a", "test" };\nint index = 3;\nif (array.IsIndexValid(index))\n    return array[index]; \nreturn ""\n')),(0,l.kt)("h2",{id:"regular-collections"},"Regular Collections"),(0,l.kt)("p",null,"Here is a list of all extensions for Lists or arrays"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Method"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Shuffle"),(0,l.kt)("td",{parentName:"tr",align:null},"Shuffles this collection")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"IsArrayIdentical"),(0,l.kt)("td",{parentName:"tr",align:null},"Check if an array is identical to another array")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Union"),(0,l.kt)("td",{parentName:"tr",align:null},"Creates an union of this collection and another collection")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Intersect"),(0,l.kt)("td",{parentName:"tr",align:null},"Creates an intersection of this collection and another collection")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Difference"),(0,l.kt)("td",{parentName:"tr",align:null},"Creates a difference of this collection and another collection")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"AddUnique"),(0,l.kt)("td",{parentName:"tr",align:null},"Add a value to the collection if it doesn't exist in this collection yet")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"GetRandom"),(0,l.kt)("td",{parentName:"tr",align:null},"Gets a random value from this collection")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"RemoveElements"),(0,l.kt)("td",{parentName:"tr",align:null},"Remove all elements equal to this value")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"IsIndexValid"),(0,l.kt)("td",{parentName:"tr",align:null},"Checks if this index is valid in the collection and returns true if so")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Resize"),(0,l.kt)("td",{parentName:"tr",align:null},"Resize this collection")))),(0,l.kt)("h2",{id:"gameobjectvectortransform-collections"},"GameObject/Vector/Transform Collections"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Method"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"SortByDistanceFromTarget"),(0,l.kt)("td",{parentName:"tr",align:null},"Sorts a collection by distance from a target")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"GetClosestToTarget"),(0,l.kt)("td",{parentName:"tr",align:null},"Returns the closest GameObject/Vector/Transform to a target in this collection")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"GetFurthestFromTarget"),(0,l.kt)("td",{parentName:"tr",align:null},"Returns the furthest GameObject/Vector/Transform from a target in this collection")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"GetGameObjectsInRange/GetTransformsInRange/GetPositionsInRange"),(0,l.kt)("td",{parentName:"tr",align:null},"Returns the GameObjects/Transforms/Positions in range")))),(0,l.kt)("h2",{id:"gameobject-collections"},"GameObject Collections"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Game Object Method"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"GetAverage"),(0,l.kt)("td",{parentName:"tr",align:null},"Get the average position of this collection")))))}p.isMDXComponent=!0}}]);